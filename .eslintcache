[{"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\App.js":"1","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\AddInvoice.js":"2","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\index.js":"3","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\InvoiceTable.js":"4","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\utils.js":"5","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\InfoDialog.js":"6","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\Navbar.js":"7","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\firestore.js":"8","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\Login.js":"9","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\Authentication.js":"10","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\PrivateRoute.js":"11","C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\SignUp.js":"12"},{"size":1056,"mtime":1624865718491,"results":"13","hashOfConfig":"14"},{"size":7972,"mtime":1606643068378,"results":"15","hashOfConfig":"14"},{"size":280,"mtime":1606571287058,"results":"16","hashOfConfig":"14"},{"size":7244,"mtime":1624866406096,"results":"17","hashOfConfig":"14"},{"size":961,"mtime":1606566783321,"results":"18","hashOfConfig":"14"},{"size":1451,"mtime":1606566669743,"results":"19","hashOfConfig":"14"},{"size":2342,"mtime":1624866322162,"results":"20","hashOfConfig":"14"},{"size":586,"mtime":1606600540863,"results":"21","hashOfConfig":"14"},{"size":3304,"mtime":1624866158601,"results":"22","hashOfConfig":"14"},{"size":1196,"mtime":1606570981252,"results":"23","hashOfConfig":"14"},{"size":544,"mtime":1624866106731,"results":"24","hashOfConfig":"14"},{"size":3461,"mtime":1624866228616,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ct8mn",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\App.js",[],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\AddInvoice.js",["53"],"import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getFormattedDate , checkInteger,addInCollection ,getDocument } from './utils';\r\nimport InfoDialog from './InfoDialog';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    paddingTop: theme.spacing.unit * 6,\r\n    maxWidth: 500,\r\n    margin:'auto',\r\n    border: '1px solid black',\r\n    padding: theme.spacing.unit * 5,\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n    display:'block'\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  date:{\r\n    flexBasis: 200,\r\n    display:'block',\r\n    marginLeft: theme.spacing.unit * 1.5,\r\n  },\r\n  container:{\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nconst ranges = [\r\n  {\r\n    value: 'PAID',\r\n    label: 'PAID',\r\n  },\r\n  {\r\n    value: 'DUE',\r\n    label: 'DUE',\r\n  }\r\n];\r\n\r\nconst integerValues = [\r\n    \"phone\",\r\n    \"invoiceAmount\"\r\n];\r\n\r\nconst defaults = {\r\n    customerName:'',\r\n    itemName:'',\r\n    invoiceAmount: '',\r\n    phone: '',\r\n    invoiceStatus: '', \r\n    invoiceDate:getFormattedDate(new Date(),'YYYY-MM-DD')\r\n}\r\n\r\nclass OutlinedInputAdornments extends React.Component {\r\n  state = {\r\n    ...defaults,\r\n  };\r\n\r\n  handleClose=(e)=>{\r\n    this.setState({open:false});\r\n  }\r\n\r\n    handleChange = prop => event => {\r\n        const data = event.target.value\r\n        const isIntInput =  integerValues.some(value=>value === prop)\r\n        let stateMutation = true;\r\n        if(isIntInput){\r\n            if(checkInteger(data)){\r\n                stateMutation = false;\r\n            }\r\n        }\r\n        if(stateMutation){\r\n            this.setState({ \r\n                [prop]: data\r\n            });\r\n        }\r\n    };\r\n\r\n    handleSubmmit = (e)=>{\r\n        const invoiceData = this.state;\r\n        let dataCheck = true;\r\n        for(let value in invoiceData){\r\n            if(!value){\r\n                dataCheck=false;\r\n            }\r\n        }\r\n        if(dataCheck){\r\n            addInCollection('invoices',this.state);\r\n            this.setState({\r\n                ...defaults,\r\n                open:true\r\n            });\r\n        }else{\r\n            alert('Please fill all the fields');\r\n        }\r\n       \r\n    }\r\n\r\n    goBack = (e)=>{\r\n        const {history:{ goBack} } = this.props;\r\n        goBack();\r\n     }\r\n\r\n     deleteInvoice = (e)=>{\r\n        const {history:{ goBack},match:{params:{id}} } = this.props;\r\n        getDocument('invoices',id).delete();\r\n        this.setState({\r\n          ...defaults,\r\n          open:true\r\n      });\r\n        setTimeout(goBack,2000);\r\n     }\r\n\r\n     updateInvoice = (e)=>{\r\n      const {history:{ goBack},match:{params:{id}} } = this.props;\r\n      getDocument('invoices',id).update({\r\n        ...this.state\r\n      });\r\n      this.setState({\r\n        open:true\r\n    });\r\n   }\r\n\r\n    componentDidMount(){\r\n        const { editMode } = this.props;\r\n        if(editMode){\r\n            const { match:{params:{id}} } = this.props;\r\n            getDocument('invoices',id).get().then(snap=>{\r\n                const document =  {...snap.data(),id:snap.id };\r\n                this.setState({\r\n                    ...document\r\n                });\r\n            });\r\n            \r\n        }\r\n    }\r\n    \r\n\r\n  render() {\r\n    const { classes,editMode} = this.props;\r\n    \r\n    const { \r\n        customerName,\r\n        itemName,\r\n        invoiceAmount,\r\n        phone,\r\n        invoiceStatus, \r\n        invoiceDate,\r\n        open\r\n    } = this.state;\r\n\r\n    const dataCheck= customerName && itemName &&  invoiceAmount  && phone  && invoiceStatus && invoiceDate ? true : false;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n      <form className={classes.container} noValidate>\r\n      <Typography align='center' color='primary' variant='h5' gutterBottom >{ editMode ? 'Edit an invoice ' : 'Add an invoice'}</Typography>\r\n        <TextField\r\n          id=\"outlined-simple-start-adornment\"\r\n          className={classNames(classes.margin, classes.textField)}\r\n          variant=\"outlined\"\r\n          label=\"Customer Name\"\r\n          value={customerName}\r\n          onChange={this.handleChange('customerName')}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\r\n          }}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          className={classNames(classes.margin, classes.textField)}\r\n          variant=\"outlined\"\r\n          label=\"Phone\"\r\n          value={phone}\r\n          onChange={this.handleChange('phone')}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\r\n          }}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          className={classNames(classes.margin, classes.textField)}\r\n          variant=\"outlined\"\r\n          label=\"Item Name\"\r\n          value={itemName}\r\n          onChange={this.handleChange('itemName')}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\r\n          }}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-adornment-amount\"\r\n          className={classNames(classes.margin, classes.textField)}\r\n          variant=\"outlined\"\r\n          label=\"Invoice Amount\"\r\n          value={invoiceAmount}\r\n          onChange={this.handleChange('invoiceAmount')}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n          }}\r\n          fullWidth\r\n        />\r\n\r\n        <TextField\r\n          select\r\n          id=\"outlined-adornment-password\"\r\n          className={classNames(classes.margin, classes.textField)}\r\n          variant=\"outlined\"\r\n          label=\"Status\"\r\n          value={invoiceStatus}\r\n          onChange={this.handleChange('invoiceStatus')}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\"></InputAdornment>,\r\n          }}\r\n          fullWidth\r\n        >\r\n        {ranges.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        \r\n        <TextField\r\n        id=\"date\"\r\n        label=\"Invoice Date\"\r\n        type=\"date\"\r\n        defaultValue={getFormattedDate(new Date(),'YYYY-MM-DD')}\r\n        className={classes.date}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={this.handleChange('invoiceDate')}\r\n        fullWidth\r\n      />\r\n      { editMode && \r\n        <Button fullWidth variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.updateInvoice} disabled = {!dataCheck} >\r\n            {'Update '}\r\n        </Button>\r\n      }\r\n        <Button fullWidth variant=\"contained\" color=\"primary\" className={classes.button} onClick={editMode ? this.deleteInvoice : this.handleSubmmit} disabled = {!dataCheck} >\r\n            {editMode ? 'DELETE ':'ADD' }\r\n        </Button>\r\n        <Button fullWidth variant=\"contained\" color=\"secondary\" className={classes.button} onClick={this.goBack} >\r\n            GO BACK\r\n        </Button> \r\n        \r\n        </form>\r\n        <InfoDialog \r\n          open={open} \r\n          handleClose={this.handleClose} \r\n          title={\"Operation successfull\"}\r\n          text={'Document operation has been done successfully'}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nOutlinedInputAdornments.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(OutlinedInputAdornments);",["54","55"],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\index.js",[],["56","57"],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\InvoiceTable.js",[],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\utils.js",[],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\InfoDialog.js",[],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\Navbar.js",[],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\firestore.js",[],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\Login.js",[],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\Authentication.js",[],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\PrivateRoute.js",[],"C:\\Users\\user\\Documents\\GitHub\\Invoice\\src\\components\\SignUp.js",[],{"ruleId":"58","severity":1,"message":"59","line":133,"column":24,"nodeType":"60","messageId":"61","endLine":133,"endColumn":30},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},"no-unused-vars","'goBack' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"no-global-assign","no-unsafe-negation"]